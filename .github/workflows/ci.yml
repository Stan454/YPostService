name: CI Pipeline

on:
  push:
    branches:
      # - master
      - dev
  pull_request:
    branches:
      # - master
      - dev

jobs:
  test-api:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.0.x

    - name: Restore dependencies
      run: dotnet restore YPostService/YPostService.csproj

    - name: Build project
      run: dotnet build YPostService/YPostService.csproj --no-restore --configuration Release

    - name: Run API in background
      run: |
        dotnet run --project YPostService/YPostService.csproj --configuration Release &
      env:
        ASPNETCORE_ENVIRONMENT: CI
        DOTNET_ENVIRONMENT: CI

    - name: Wait for API to start
      run: |
        echo "Waiting for API to be ready..."
        for i in {1..30}; do
          if curl -s http://localhost:5206/swagger > /dev/null; then
            echo "API is ready!"
            break
          fi
          sleep 2
        done

    - name: Install newman (Postman CLI runner) and HTML reporter
      run: |
        npm install -g newman
        npm install -g newman-reporter-html

    - name: Run Postman tests with HTML report
      run: |
        newman run PostServiceTests/YPostApiTests.postman_collection.json --insecure -r html --reporter-html-export newman-report.html

    - name: Upload Newman HTML report
      uses: actions/upload-artifact@v4
      with:
        name: newman-html-report
        path: newman-report.html

  xunit-tests:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Restore dependencies
      run: dotnet restore

    - name: Build solution
      run: dotnet build --no-restore --configuration Release

    - name: Run tests
      run: dotnet test --no-build --configuration Release

  codeql-analysis:
    runs-on: ubuntu-latest
    needs: xunit-tests
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      matrix:
        language: [csharp]
        build-mode: [manual]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: csharp
        build-mode: manual

    - name: Build solution manually
      run: dotnet build --configuration Release

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
