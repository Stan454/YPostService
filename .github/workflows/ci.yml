name: Full CI Pipeline with Build, Tests, and CodeQL

on:
  push:
    branches: [dev, master]
  pull_request:
    branches: [dev, master]

jobs:
  test-api:
    name: Run API and Postman tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x

      - name: Restore dependencies
        run: dotnet restore YPostService/YPostService.csproj

      - name: Build project
        run: dotnet build YPostService/YPostService.csproj --no-restore --configuration Release

      - name: Run API in background
        run: |
          dotnet run --project YPostService/YPostService.csproj --configuration Release --urls "http://localhost:5206" &
        env:
          ASPNETCORE_ENVIRONMENT: CI
          DOTNET_ENVIRONMENT: CI

      - name: Wait for API to start
        run: |
          echo "Waiting for API to be ready..."
          for i in {1..30}; do
            if curl -s http://localhost:5206/swagger > /dev/null; then
              echo "API is ready!"
              break
            fi
            sleep 2
          done

      - name: Install newman (Postman CLI runner)
        run: npm install -g newman

      - name: Run Postman tests
        run: |
          newman run PostServiceTests/YPostApiTests.postman_collection.json --insecure

  test:
    name: Run xUnit Tests
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x' 

      - name: Restore dependencies
        run: dotnet restore

      - name: Build solution
        run: dotnet build --no-restore --configuration Release

      - name: Run tests
        run: dotnet test --no-build --configuration Release

  codeql:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    needs: test  # Run only after tests succeed

    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      matrix:
        language: [csharp]
        build-mode: [manual]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: csharp
          build-mode: manual

      - name: Build solution manually
        run: dotnet build --configuration Release

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
